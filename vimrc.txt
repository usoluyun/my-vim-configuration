"""""""""""""""""""""""""""""""""""""""""
"General
"""""""""""""""""""""""""""""""""""""""""
"History row count
set history=700

"Enable filetype plugins
filetype plugin on
filetype indent on

"set auto load file when a file is changed outside
set autoread

"set map leader - first key stroke of a hotkey combination
let mapleader=","
"set gui map leader
let g:mapleader=","

"fast saving
nmap <leader>w :w!<cr>

set encoding=utf8

set ffs=unix,mac,dos

"""""""""""""""""""""""""""""""""""""""""""
"color & fonts
"""""""""""""""""""""""""""""""""""""""""""
try
    colorscheme hemisu
    if has('gui_running')
        set background=light
    else
        set background=dark
    endif
catch
endtry

"program language syntax highlighting
syntax on

"""""""""""""""""""""""""""""""""""""""""""
"User interface
"""""""""""""""""""""""""""""""""""""""""""

"set encoding to UTF-8
set encoding=utf-8

"set 7 line to the cursor when moving cursor to end of screen
set so=7

"set completion operations when using command line mode
set wildmenu
set wildignore=*.o,*~,*.pyc "wildmenu will ignore these types of files
if has("win16")||has("win32")
	set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/DS_Store
else
	set wildignore+=.git\*,.hg\*,.svn\*
endif	

"show positon of cursor 
set ruler

"set heigh of cmd bar
set cmdheight=2

"set buffer become when it is abandoned.
set hid

"show matching brackets when text indicator is over them 
set showmatch
set mat=2 "how many tenths of a second to blink when match a bracket

"use spaces instead of tabs
set expandtab

"be smart when using tabs
set smarttab

"1 tab equals 4 spaces
set shiftwidth=4
set tabstop=4

"set line break to 500 chars
set lbr
set tw=500

set ai "auto indent
set si "smart indent
set wrap "Wrap lines

"""""""""""""""""""""""""""""""""""""""""""""""
"Search setting
"""""""""""""""""""""""""""""""""""""""""""""""

"set ignore case when using /s to search
set ignorecase

"set smart case when using /s to search
set smartcase

"set highlight search result
set hlsearch

"make serach like modern browser 
set incsearch

"""""""""""""""""""""""""""""""""""""""""""""
"Regex
"""""""""""""""""""""""""""""""""""""""""""""
"turn magic on for Regex
set magic

"""""""""""""""""""""""""""""""""""""""""""""
"Seach in selection in Visual Mode
"""""""""""""""""""""""""""""""""""""""""""""

vnoremap <silent> * :call VisualSelection('f', '')<CR>
vnoremap <silent> # :call VisualSelection('b', '')<CR>

"""""""""""""""""""""""""""""""""""""""""""""
"key bind mapping
"""""""""""""""""""""""""""""""""""""""""""""

"Treat long lines as break line
map j gj
map k gk

"Map space to search and ctrl space to back search
map <space> /
map <c-space> ?

"""""""""""""""""""""""""""""""""""""""""""""
"Sound
"""""""""""""""""""""""""""""""""""""""""""""
"no error sounds
set noerrorbells
set novisualbell
set t_vb=
set tm=500


"""""""""""""""""""""""""""""""""""""""""""""
"User defined function
"""""""""""""""""""""""""""""""""""""""""""""

"Delete trailing white space on save

func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal `z"
endfunc
autocmd BufNewFile *.py :call DeleteTrailingWS()
autocmd BufNewFile *.coffee :call DeleteTrailingWS()

"""""""""""""""""""""""""""""""""""""""""""""
"Path related
""""""""""""""""""""""""""""""""""""""""""""""

"change working path to current windows path and ignore /tmp path and error message if exception happend
autocmd BufEnter * if expand("%:p:h") !~ '^/tmp' | silent! lcd %:p:h | endif

"""""""""""""""""""""""""""""""""""""""""""""
"Pathogen
"""""""""""""""""""""""""""""""""""""""""""""

execute pathogen#infect()

"""""""""""""""""""""""""""""""""""""""""""""
"Misc
"""""""""""""""""""""""""""""""""""""""""""""

"don't let screen redraw when executing macros
set lazyredraw

"set foldcolumn size
set foldcolumn=1

"turn of file backup
set nobackup
set nowb
set noswapfile

"set file formats
set ffs=unix,mac,dos

""""""""""""""""""""""""""""""""""""""""""""
"Plugin settings
"""""""""""""""""""""""""""""""""""""""""""

"Calendar
let g:calendar_diary=$DROPBOXPATH.'/diary'
map ca :Calendar<cr>

"""""""""""""""""""""""""""""""""""""""""""""
"GUI settings
"""""""""""""""""""""""""""""""""""""""""""""

"set key binding of hidding and show vim gui
map <silent> <C-F2> :if &guioptions =~# 'T' <Bar>
                                          \set guioptions-=T  <Bar>
                                           \set guioptions-=m  <Bar>
				            \set guioptions-=r <Bar>
                                      \else <Bar>
                                          \set guioptions+=T  <Bar>
                                           \set guioptions+=m  <Bar>
					    \set guioptions+=r <Bar>
                                       \endif<CR>


""Appearence setting
if has('gui_running')
set guioptions-=T
set guioptions-=m
set guioptions-=r
set guifont = PragmataPro:h14
endif

set laststatus=2
set statusline=%F%m%r%h%w\ [FORMAT=%{&ff}]\ [TYPE=%Y]\ [ASCII=\%03.3b]\ [HEX=\%02.2B]\ [POS=%04l,%04v][%p%%]\ [LEN=%L] 

set number
set dictionary+=/usr/share/dict/words
set scrolloff=5
set mouse=a
"set cursorline
""set cursorcolumn


""Python editor setting
autocmd FileType python set complete+=k~/.vim/syntax/python.vim isk+=.,(
let g:pydoc_highlight=0
let g:pydoc_cmd="/usr/bin/pydoc"
let g:pydiction_location='/home/usoluyun/.vim/after/ftplugin/pydiction/complete-dict'
autocmd BufNewFile *.py 0r ~/.vim/template/simple.py

"highlight line length
augroup vimrc_autocmds
    autocmd!
    " highlight characters past column 120
    autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
    autocmd FileType python match Excess /\%120v.*/
    autocmd FileType python set nowrap
augroup END

""Tcl editor setting
autocmd FileType tcl set complete+=k~/.vim/syntax/tcl.vim isk+=.,(
autocmd BufNewFile *.tcl 0r ~/.vim/template/simple.tcl

""zen coding
let g:user_zen_expandabbr_key = '<c-y>' 
let g:use_zen_complete_tag = 1

""html5 editor setting
autocmd BufNewFile *.html 0r ~/.vim/template/simple.html


""sql editer setting
auto BufNewFile *.sql 0r ~/.vim/template/simple.sql


""supertab setting
let g:SuperTabRetainCompletionType=2
let g:SuperTabDefaultComplettionType = "<C-X><C-O>" 


""""""""""""""""""""""""""""""""""""""""""""""""""
""pymode setting
""""""""""""""""""""""""""""""""""""""""""""""""""
" Python-mode
" " Activate rope
" " Keys:
" " K             Show python docs
" " <Ctrl-Space>  Rope autocomplete
" " <Ctrl-c>g     Rope goto definition
" " <Ctrl-c>d     Rope show documentation
" " <Ctrl-c>f     Rope find occurrences
" " <Leader>b     Set, unset breakpoint (g:pymode_breakpoint enabled)
" " [[            Jump on previous class or function (normal, visual, operator modes)
" " "]]            Jump on next class or function (normal, visual, operator modes)
" " [M            Jump on previous class or method (normal, visual, operator modes)
" " "]M            Jump on next class or method (normal, visual, operator modes)
let g:pymode_rope = 0

"
" " Documentation
let g:pymode_doc = 1
let g:pymode_doc_key = 'K'
"
" "Linting
let g:pymode_lint = 1
let g:pymode_lint_checker = "pyflakes,pep8"
" " Auto check on save
let g:pymode_lint_write = 1
"
" " Support virtualenv
let g:pymode_virtualenv = 1

" " Enable breakpoints plugin
let g:pymode_breakpoint = 1
let g:pymode_breakpoint_key = '<leader>b'

" " syntax highlighting
let g:pymode_syntax = 1
let g:pymode_syntax_all = 1
let g:pymode_syntax_indent_errors = g:pymode_syntax_all
let g:pymode_syntax_space_errors = g:pymode_syntax_all

" " Don't autofold code
let g:pymode_folding = 0

""""""""""""""""""""""""""""""""""""""""""""""""""
""powerline
""""""""""""""""""""""""""""""""""""""""""""""""""

set laststatus=2
set nocompatible
set t_Co=256
let g:Powerline_symbols='unicode'

""""""""""""""""""""""""""""""""""""""""""""""""""""""
"jedi-vim
""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:jedi#use_splits_not_buffers = "left"
let g:jedi#goto_assignments_command = "<leader>g"
let g:jedi#goto_definitions_command = "<leader>d"
let g:jedi#documentation_command = "K"
let g:jedi#usages_command = "<leader>n"
let g:jedi#completions_command = "<C-Space>"
let g:jedi#rename_command = "<leader>r"
let g:jedi#show_call_signatures = "1"

""""""""""""""""""""""""""""""""""""""""""""""""""""""
"taglist
"""""""""""""""""""""""""""""""""""""""""""""""""""""""
if has('win32') 
    let Tlist_Ctags_Cmd = 'ctags'
else 
    let Tlist_Ctags_Cmd = '/usr/local/bin/ctags'
endif
let Tlist_Show_One_File = 1 
let Tlist_Exit_OnlyWindow = 1
let Tlist_Use_Right_Window = 1
